// Code generated by protoc-gen-kratos-dart-http. DO NOT EDIT.

import 'dart:convert';
import 'package:kratos_plugin/kratos_plugin.dart';
import 'package:http/http.dart' as http;
import 'greeter.dart';

/// Greeter 服务是打招呼服务
abstract class GreeterClient {
  /// SayHello 方法进行一个招呼的打。
  /// 当用户名为 "404" 时应报错。错误原因是 "USER_NOT_FOUND"。
  /// 当用户名为 "400" 时应报错。错误原因是 "GREETER_UNSPECIFIED"。
  Future<HelloReply> sayHello(HelloRequest request);
}

class GreeterClientImpl implements GreeterClient {
  final http.Client _client;

  const GreeterClientImpl(this._client);

  @override
  Future<HelloReply> sayHello(HelloRequest req) async {
    final arg = RequestArg.fromPattern(
      const HttpRule(
        kind: "get",
        path: "/helloworld/{name}",
        body: "",
      ),
      req.toJson(),
    );

    final resp = await _client.get(arg.url, headers: {
      'Content-Type': 'application/json',
    });

    if (resp.statusCode >= 200 && resp.statusCode <= 299) {
      return HelloReply.fromJson(jsonDecode(resp.body));
    }
    throw KratosError.fromJson(jsonDecode(resp.body));
  }
}
